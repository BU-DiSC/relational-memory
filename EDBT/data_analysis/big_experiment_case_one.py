import matplotlib.pyplot as plt
import numpy as np

#BAR GRAPH:

# r_c = [78697,37030,18539,9299,4694,2387,1254,697,352,194,113,80,58]
# rh = [87095,38929,18462,9278,4643,2331,1197,618,313,191,123,60,59]
# d = [110381,59348,29083,16152,10139,3798,2835,3944,1904,1213,613,309,160]
# c = [66107,33141,16620,8236,4144,2147,1109,575,281,157,80,36,20]

#l1 refills/references
# c = np.array([0.001322251602, 0.001512099302, 0.001684831862, 0.000943001808, 0.000983758694, 0.001240970546, 0.002286876942, 0.002852962688, 0.002733812947999999, 0.006685236767999999, 0.008376963348, 0.00934579439, 0.00769230769])
# d = np.array([0.000129117634, 0.00017726940200000002, 0.00031590707, 0.0006827690560000001, 0.001425421726, 0.002578005108, 0.004642638972000001, 0.053569987895999996, 0.054948535231999995, 0.054351145038, 0.059259259259999995, 0.062311557792, 0.06016260163])
# r_c = np.array([5.4563472e-05, 7.8960248e-05, 0.000114812412, 0.00022373634800000003, 0.00051561682, 0.000937069718, 0.0016822625219999998, 0.0026998246339999996, 0.004230630422, 0.007448449908, 0.016922071231999996, 0.028433899582, 0.048683525984])
# rh = np.array([9.4767818e-05, 0.00010049418999999999, 0.000221015396, 0.0002581563, 0.000572897148, 0.001119804118, 0.0020911157440000002, 0.003597445928, 0.005810789848, 0.009811588234, 0.021957374657999996, 0.03723653396, 0.057391304347999994])

#l2 refills/references
c = np.array([0.006502055844799999, 0.015297162571800003, 0.0084736911308, 0.012209955465600001, 0.023995563261999996, 0.25820007783999993, 0.35534117862, 0.35171156449999996, 0.39960397497999994, 0.37220703934, 0.3352073365, 0.3087121212, 0.3630952381])
d = np.array([0.48546657851999997, 0.49094398456, 0.49414864721999996, 0.4942057838, 0.49604380128000003, 0.49320603183999995, 0.49146887476000006, 0.48423419706, 0.46917584802, 0.45589504433999994, 0.40124861288, 0.36851540618, 0.35769387236])
r_c = np.array([0.48432842454, 0.47710031494000005, 0.47448881958000005, 0.46322216518000003, 0.43398903406, 0.41769653862, 0.44309901338, 0.3786414566, 0.39963636364000005, 0.38937048502, 0.35246376812, 0.37725490198000006, 0.36551787901999994])
rh = np.array( [0.07028821960599999, 0.05589074129799999, 0.081237688884, 0.086865509294, 0.09632097294, 0.10844877345, 0.10172827173000001, 0.116279599772, 0.17070707072000002, 0.13807867495999998, 0.15110164474999999, 0.14892239365999999, 0.16374315098])

x = np.array([4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384])
x_label = np.divide(np.arange(len(x)), 1)

plt.xlabel("Row Size")
plt.ylabel("Cache miss ratio(refills/references)")
plt.title("l2 refills/references")

bar_width = 0.2
index = np.arange(len(x_label))

plt.bar(index - bar_width, rh, width=bar_width, label='r h')
plt.bar(index, r_c, width=bar_width, label='r c')
plt.bar(index + bar_width, d, width=bar_width, label='d')
plt.bar(index + (2 * bar_width), c, width=bar_width, label='c')

plt.xticks(index, x)
plt.legend()
plt.show()


# NORMALIZED EXECUTION TIME:

# Time(ms)
# r_c = np.array([45565.8, 22635.2, 11342.6, 5714.0, 2894.8, 1478.2, 783.8, 411.4, 214.8, 126.0, 81.6, 63.2, 53.4])
# rh = np.array([45151.6, 22943.8, 11329.4, 5667.4, 2845.8, 1439.2, 738.2, 382.0, 208.4, 111.8, 66.6, 47.2, 43.0])
# d = np.array([63621.4, 32533.8, 15994.6, 8236.8, 4346.4, 2318.0, 1302.0, 1960.2, 1031.2, 534.6, 317.6, 183.8, 102.2])
# c = np.array([66203.6, 34127.6, 16608.6, 8264.6, 4148.4, 2140.6, 1131.0, 587.8, 316.0, 177.2, 107.0, 62.0, 45.6])

#res.l1_references
# c = np.array([344110.0, 172078.6, 86062.0, 43054.0, 21550.0, 10798.0, 5422.2, 2734.0, 1390.0, 718.0, 382.0, 214.0, 130.0])
# d = np.array([311343.4, 155695.2, 77871.0, 38959.0, 19503.0, 9775.0, 4911.0, 2479.0, 1263.0, 655.0, 351.0, 199.0, 123.0])
# r_c = np.array([278574.6, 139310.6, 69678.8, 34862.4, 17454.8, 8750.6, 4398.8, 2222.4, 1134.6, 590.8, 319.0, 183.2, 115.2])
# rh = np.array([278575.2, 139311.6, 69678.6, 34862.6, 17455.2, 8751.6, 4399.6, 2223.8, 1135.8, 591.2, 318.8, 182.6, 115.0])

# # l1 refills
# c = np.array([455.0, 260.2, 145.0, 40.6, 21.2, 13.4, 12.4, 7.8, 3.8, 4.8, 3.2, 2.0, 1.0])
# d = np.array( [40.2, 27.6, 24.6, 26.6, 27.8, 25.2, 22.8, 132.8, 69.4, 35.6, 20.8, 12.4, 7.4])
# r_c = np.array([15.2, 11.0, 8.0, 7.8, 9.0, 8.2, 7.4, 6.0, 4.8, 4.4, 5.4, 5.2, 5.6])
# rh = np.array( [26.4, 14.0, 15.4, 9.0, 10.0, 9.8, 9.2, 8.0, 6.6, 5.8, 7.0, 6.8, 6.6])

#res.l2_references
# c = np.array([2026.2, 1099.4, 573.8, 246.0, 140.8, 81.2, 55.8, 29.6, 22.8, 23.8, 15.4, 10.4, 9.2])
# d = np.array([2070.6, 2074.4, 2067.4, 2070.4, 2071.2, 1043.8, 527.0, 271.8, 144.6, 76.8, 47.4, 30.6, 20.2])
# r_c = np.array([539.0, 278.8, 146.4, 102.4, 72.6, 53.8, 46.6, 22.4, 19.0, 19.2, 21.2, 19.6, 21.2])
# rh = np.array([516.6, 249.4, 141.2, 102.2, 71.6, 55.4, 46.8, 29.6, 22.6, 22.0, 24.8, 23.2, 24.6])

#res.l2_refills
# c = np.array([13.0, 16.4, 4.6, 3.0, 3.4, 20.8, 19.8, 10.4, 9.0, 8.8, 5.0, 3.0, 3.2])
# d = np.array([1005.2, 1018.4, 1021.6, 1023.2, 1027.4, 514.8, 259.0, 131.6, 67.8, 35.0, 19.0, 11.2, 7.2])
# r_c = np.array([261.0, 133.0, 69.4, 47.4, 31.4, 22.4, 20.6, 8.2, 7.2, 7.4, 7.4, 7.0, 7.6])
# rh = np.array([36.2, 14.0, 11.8, 9.0, 6.8, 5.8, 4.6, 3.4, 3.8, 3.0, 3.6, 3.4, 4.0])

#res.inst_retired
# c = np.array([573527.0, 286808.2, 143447.0, 71767.0, 35927.0, 18007.0, 9047.2, 4567.0, 2327.0, 1207.0, 647.0, 367.0, 227.0])
# d = np.array([639064.4, 319576.4, 159832.0, 79960.0, 40024.0, 20056.0, 10072.0, 5080.0, 2584.0, 1336.0, 712.0, 400.0, 244.0])
# r_c = np.array([491607.8, 245847.6, 122967.8, 61527.4, 30807.8, 15447.6, 7767.8, 3927.4, 2007.6, 1047.8, 568.0, 328.2, 208.2])
# rh = np.array([491608.2, 245848.8, 122967.6, 61527.6, 30808.2, 15448.6, 7768.6, 3928.8, 2008.8, 1048.2, 567.8, 327.6, 208.0])



# normalized_time = d / d

# x = np.array([4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384])
# x_label = np.divide(np.arange(len(x)), 1)

# plt.xlabel("Row Size")
# plt.ylabel("Normalized Retirement Time to Row-Store")
# plt.title("inst_retired")

# bar_width = 0.2
# index = np.arange(len(x_label))

# plt.bar(index - bar_width, rh / d, width=bar_width, label='r h')
# plt.bar(index, r_c / d, width=bar_width, label='r c')
# plt.bar(index + (1 * bar_width), c / d, width=bar_width, label='c')

# plt.xticks(index, x)
# plt.legend()
# plt.ylim(0, 1.1)  
# plt.axhline(y=1.0, color='red', linestyle='-')

# plt.show()